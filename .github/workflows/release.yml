name: release

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build-image:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: install nix
      uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
        extra_nix_config: |
          experimental-features = nix-command flakes
    - name: configure cachix
      uses: cachix/cachix-action@v8
      with:
        name: mschuwalow
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: test
      run: |
        nix develop --command docker-compose up -d && sbt test && docker-compose down
    - name: build docker image
      run: |
        nix build .#docker
    - name: store docker artifact
      uses: actions/upload-artifact@v2
      with:
        name: docker-artifact
        path: result
        retention-days: 1
  github-release:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: create github release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  docker-release:
    runs-on: ubuntu-latest
    needs: github-release
    steps:
      - name: login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: retrieve docker artifacts
        uses: actions/download-artifact@v2
        with:
          name: docker-artifact
          path: result
      - name: push image to dockerhub
        run: |
          docker load < result
          docker tag workflow-generator-backend workflow-generator-backend:${{ github.ref }}
          docker push workflow-generator-backend:${{ github.ref }}
