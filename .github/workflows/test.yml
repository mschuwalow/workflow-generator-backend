name: "Run tests"
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
        extra_nix_config: |
          experimental-features = nix-command flakes
    - name: Configure cachix
      uses: cachix/cachix-action@v8
      with:
        name: mschuwalow
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Lint
      run: |
        nix develop --command sh -c "sbt fixCheck"
    - name: Start docker-compose
      run: |
        docker-compose up -d
    - name: Run tests
      run: |
        nix develop --command sh -c "sbt test"
    - name: Stop docker-compose
      run: |
        docker-compose down
    - name: Tests passed
      if: ${{ success() }}
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "context": "tests",
          "state": "success",
          "description": "Tests passed",
          "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }'
    - name: Tests failed
      if: ${{ failure() }}
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "context": "tests",
          "state": "failure",
          "description": "Tests failed",
          "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }'
