openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Workflow Generator"
tags:
- name: "workflows"
  description: "Create and manage workflows"
paths:
  /workflows:
    post:
      tags:
      - "workflows"
      summary: "Add a new workflow"
      operationId: "postWorkflow"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workflow"
      responses:
        "201":
          description: "Created a Workflow"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowWithId"
        "405":
          description: "Invalid input"
  /workflows/{workflowId}:
    get:
      tags:
      - "workflows"
      summary: "Get a workflow by ID"
      operationId: "getWorkflow"
      parameters:
      - name: "workflowId"
        in: "path"
        description: "ID of workflow to return"
        required: true
        schema:
          $ref: "#/components/schemas/WorkflowId"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowWithId"
        "404":
          description: "not found"
    delete:
      tags:
      - "workflows"
      summary: "Delete a workflow"
      operationId: "deleteWorkflow"
      parameters:
      - name: "workflowId"
        in: "path"
        description: "ID of workflow to delete"
        required: true
        schema:
          $ref: "#/components/schemas/WorkflowId"
      responses:
        "404":
          description: "not found"
components:
  schemas:
    Component:
      oneOf:
      - $ref: "#/components/schemas/Source"
      - $ref: "#/components/schemas/Transformer"
      - $ref: "#/components/schemas/Sink"
    ComponentId:
      type: string
    Sink:
      type: object
      description:
        The terminal point of a workflow.
      properties:
        stream:
          $ref: "#/components/schemas/ComponentId"
        sink_op:
          $ref: "#/components/schemas/SinkOp"
      required:
      - stream
      - sink_op
    SinkOp:
      type: "object"
      description: "The operation to perform as part of the Sink, e.g. sending an email."
    Source:
      type: object
      properties:
        type:
          type: string
          enum: ["Source"]
      required:
      - type
    Transformer:
      oneOf:
      - type: object
        description: "A transformer that consumes a single stream and produces a new stream using an operation."
        properties:
          type:
            type: string
            enum: ["Transformer1"]
          stream:
            $ref: "#/components/schemas/ComponentId"
          op:
            $ref: "#/components/schemas/Op1"
        required:
        - type
        - stream
        - op
      - type: object
        description: "A transformer that consumes two streams and produces a new stream using an operation"
        properties:
          type:
            type: string
            enum: ["Transformer2"]
          stream1:
            $ref: "#/components/schemas/ComponentId"
          stream2:
            $ref: "#/components/schemas/ComponentId"
          op:
            $ref: "#/components/schemas/Op2"
        required:
        - type
        - stream1
        - stream2
        - op
    Op1:
      type: object
      description: "An operation defined on a single stream, e.g. mapping, filtering, ..."
    Op2:
      type: object
      description: "An operation defined on two streams, e.g. joining, ..."
    Workflow:
      type: "object"
      description: |
        An entire Workflow.

        The components field should be interpreted as a Map[ComponentId, Component].
        Only components that are referenced by a Sink are guaranteed to be created.
      properties:
        components:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/Component"
      required:
      - components
    WorkflowWithId:
      allOf:
      - $ref: "#/components/schemas/Workflow"
      - type: object
        properties:
          id:
            $ref: "#/components/schemas/WorkflowId"
        required:
        - id
    WorkflowId:
      type: object
